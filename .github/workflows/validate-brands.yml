name: Validate brands.json

on:
  push:
    branches:
      - main
    paths:
      - brands.json
      - '.github/scripts/**'
      - '.github/workflows/**'
  pull_request:
    paths:
      - brands.json
      - '.github/scripts/**'
      - '.github/workflows/**'

jobs:
  validate-json:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set up Python
        uses: actions/setup-python@v4.9.0
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jsonschema

      - name: Validate brands.json
        run: |
          python .github/scripts/validate_brands.py

      - name: Auto-approve and merge
        if: contains(github.event.pull_request.user.login, 'HineshMandalia')
        uses: hmarr/auto-approve-action@v4.0.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  auto-merge:
    runs-on: ubuntu-latest
    needs: validate-json
    if: github.event_name == 'pull_request' && github.ref != 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Wait for mergeable state
        uses: actions/github-script@v7.0.1
        with:
          script: |
            if (!context.payload.pull_request) {
              core.setFailed('This workflow must be triggered by a pull_request event.');
              return;
            }

            let attempts = 0;
            const maxAttempts = 10;
            const delay = ms => new Promise(resolve => setTimeout(resolve, ms));

            while (attempts < maxAttempts) {
              const { data: pullRequest } = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number
              });

              if (pullRequest.mergeable && pullRequest.mergeable_state === 'clean') {
                core.setOutput('mergeable', true);
                return;
              }

              attempts++;
              await delay(1000); // Wait 1 second before retrying
            }

            core.setOutput('mergeable', false);

      - name: Merge pull request
        if: steps.wait-for-mergeable-state.outputs.mergeable == 'true'
        uses: actions/github-script@v7.0.1
        with:
          script: |
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });